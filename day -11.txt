1)class contain variables and methods.
2)static variable,static methods,static block.
we can access them without creating an object.
static block execute before the main method.
3)final is a key word.we can declare variables as final,methods as final,we can declare class  as final.we have to assign the final variable.the final class cannot be inherited.
final method cannot be overiding.

------------------------------------------------------------------------------------------------
inhereritance
------------------------
1)reusable of exixting code.
2)parent class properties are used by the child class.
3)we create object of child class and can access the parent and child class.
4)we use 2 keywords extends(class),super(variables,methods)
---------------------------------------------------------------------------------------------------
access specifier
----------------------------
1)private :- if we declare variable,method as private we can access it within the class only.
2)public :-if we declare variable,method as public we can access it within the class,outside the class and out side the package.

3)protected :- if we declare variable,method as protected we can access it within the class and within the child class.

4)default :-if we declare variable,method as default then we can access it within the class,outside the class but not out side the package

 ----------------------------------------------------------------------


function overloading :-
If the function has the same name but different datatype the return type and parameter then it is known as function overloading.
same data if we want to use the parameters should be different. 
example:-
int sum(int a,int b);
int sum(int a,int b,int c);
float sum(float a,float b);
-------------------------------------------------------------------------------------------------
constructor ()
-------------------------------
1)it is a function which has the same name as that of the class name.
2)There are 2 types of constructor 1)default 2)parameterized 
3)A constructor is exceuted when an object is created for a class.
4)if we use more than one constructor in a class we call it as constructor overloading.
5)a constructor doesnot have any return type nor it return any value.

-----------------------------------------------------------------------------------------
Abstract class and abstract method
-----------------------------------------------------------
Abstract class are those which contain abstract methods as well as concrete method.
We cannot create object(instanciate) an abstract class.
we have to extends it or inherite it to the child class and override its abstract methods in the child class.
we use the keyword abstract for abstract class and abstract method.
Abstract methods are those which donot contain any body.
It is an incomplete class.
--------------------------------------------------------------------------------
example :-
abstract class student
{
abstract void inputStudentdetails();
abstract void inputStudentMarks();
void studentClass()
{
System.out.println("He is student of class X");
}
}


------------------------------------------------------------------------------
interface :-
--------------------
1)it is similar to abstract class but it doesnot contain concrete methods.
2)java doesnot support multiple inheritance but by interface we can do multiple inheritance.
3)The override methods should have public access specifier.
-----------------------------------
interface first
{
void display();
}
interface second
{
void display1();
}
class main1 implements first,second
{
public void display()
{}
public void display1()
{}
main()
{}
}
-------------------------------------------------------
Constructor :- constructors are used to assign the values.
we use constructors to assign the value because constructor execute first when an object is created for a class.

 * first the parent class constructor will execute than the child class constructor will execute.
--------------------------------------------------------------
casting :-
1)implicit casting
2)explicit casting
 -----------------------------------------------
String :-
1)String is a class in java.lang package
2)In java all string are also considered as datatype
3)String object is Immutable(cannot be changed)
4)When we assign a value it create a new object and the value remains in memory.
Example :- String s1=“hello”;
 String s2=new String(“hello”);
Method :- length(),isEmpty(),charAt(),equals(),startWith(),endsWith(),indexOf(),lastIndexOf(),toUpperCase(),
toLowerCase()
-----------------------------------------------------------------------------------------
String Buffer:-
1)It is a peer class of string and provides all functions of string.
2)It is mutable (can be modified) and expanded dynamically.
3)It is synchronized
Ex:-1) StringBuffer b=new StringBuffer(“hello”);
We pass “hello” to StringBuffer object “b”
2)StringBuffer b=new StringBuffer(50);
We can store 50 or more character .It is mutable so it expands dynamically
3)StringBuffer b=new StringBuffer()
StringBuffer object b is created with default capacity 16 character.
4)Methods :- append(),insert(),delete(),reverse()
-----------------------------------------------------------------------------------------
String Builder :-
1)It is same as String Buffer
2)String Builder is not synchronized
3) String Buffer class takes more time to execute than StringBuilder
----------------------------------------------------------------------------------
String s1=”apple”;
String s1=”grapes”;
Now the reference s1 contain new data the old object data is lost.
It is known as unreferenced object and garbage collector will remove it from memory.

--------------------------------------------------------
Wraper class
-------------------------
All datatype in java are also classes.
1)byte   ---Byte
2)short  ---Short
3)int      ---Integer
4)long   ---Long
5)float   ---Float
6)double ---Double
7)char     ---Character
8)String
These all belongs to lang package.
-------------------------------------------------------------------
javap java.lang.Float
---------------------------------------------------------------------------------
Exception Handling
---------------------------------------------------------------------------------
There are 3 types of error
1)compile time error
2)logical error
3)runtime error.
Exception handling is use to handle the runtime error and allow the program to flow till the end of the program and display some error message.
In java there are 5 key words used to handle the error.
1)try 2)catch 3)finally 4)throws 5)throw
-------------------------------------------------------------------------------
exception is divide into 3 parts
1)checked exception :- SqlException,ServletException,InterruptedException
2)unchecked exception :-Arithmatic Exception,
ArrayIndexOutOfBound Exception,NumberFormat Exception
3)error :- HD failure,stack overflow.
-----------------------------------------------------------------------------------------
1)try-catch
in this if the try block is success then the catch block is success.
if try block is not success(no error) then the catch block is also not success.
-----------------------------------------------------------------------------------------
2)try-finally
in this the try block is success or not it does not matter the finally block will definatly exceute.
-----------------------------------------------------------------------------------------
Throws :- It is mainly used to handle checked exception.if we handle the exception then only it will allow the control to flow.we have write with main method.
-------------------------------------------------------------------------------
Throw :- it is used for user defined exception
------------------------------------------------------------------------------------
Collection Framework
------------------------------------------------------------------------------------
Array :- collection of similar elements or data type.it has a fixed size.
example :- int a[]=new a[5];

collection is a collection of objects.
it can expand dynamically.The memory size will increase. On delete the memory size will decrease .
----------------------------------------------------------------------------------------
Java Collection framework provides many interfaces (Set, List,Map etc.) and classes (ArrayList, Vector, LinkedList,HashSet,LinkedHashSet, TreeSet etc).

1)set(interface):-(classes)TreeSet,HashSet,LinkedHashSet
2)list (interface):-(classes)LinkedList,ArrayList,Vector,Stack
3)map(interface):-(classes)HashTable,HashMap

1.set(interface)->
Does not allow duplicate value.
HashSet,LinkedHashSet,TreeSet(classes).
a.Hashset->Display elements in random order.
b.LinkedHashSet ->it displays in the same order.
c.TreeSet ->It display in the sorted order.

2.List->
It allows duplicate value.
Stack,ArrayList,Linkedlist,Vector
Stack:FILO .the last element will be arr[0].
Linked List:it displays in same order.
-----------------------------
list iterator is used to view data forward and backward
-----------------------------------------------------------------------------------------
3.Map->
HashMap:-we enter Key and value pair
HashTable:-we enter Key and value pair

*The HashMap class is roughly equivalent to Hashtable, except that it is unsynchronized and permits nulls. 
(HashMap allows null values as key and value whereas Hashtable doesnt allow). 
HashMap does not guarantee that the order of the map will remain constant every time. 
HashMap is unsynchronized and Hashtable is synchronized.

Key-value
key should be unique- but value can be duplicate
----------------------------------------------------------------------------------------- note:Iterator,ListIterator and enumeration are interfaces which contains the set of methods. with the help of these methods we can retrieve objects from the collection of classes.
-------------------------------------
Iterator:three methods:hasNext();next();remove();
----------------------------------------------------------------------------------------
Vector is synchronized whereas arraylist is not.
---------------------------------------------------------------------------------------




























































































